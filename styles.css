/* Binary switch */
.switch {
  toggle: switch;
}

.content:toggle(switch 1) {
  background-color: black;
  color: white;
}

/* Accordion */
.accordion>dt {
  toggle: glossary;
  display: list-item;
}

.accordion>dt::marker {
  content: var(--marker, '👉🏽');
}

.accordion>dt:toggle(glossary 1)::marker {
  --marker: '👇🏽';
}

.accordion>dd {
  toggle-visibility: toggle glossary;
}

/* Tree view */
.tree {
  toggle: tree;
}

.tree+ul {
  toggle-visibility: toggle tree;
}

/* Tabs */
panel-tab {
  /* Each tab creates a sticky toggle
(so once it’s open, clicking again won’t close it),
opts into the group,
and declares itself a toggle activator */
  toggle: tab 1 at 0 group sticky;
  display: block;
}

panel-tab:toggle(tab 1) {
  font-weight: bold;
}

panel-card {
  toggle-visibility: toggle tab;
}

/* Named states */
.colors {
  toggle-root: colors [purple green blue red] at blue;
}

.colors button {
  toggle-trigger: colors;
}

.colors button:nth-child(2) {
  toggle-trigger: colors purple;
}

.colors button:nth-child(3) {
  toggle-trigger: colors green;
}

.colors button:nth-child(4) {
  toggle-trigger: colors blue;
}

.colors button:nth-child(5) {
  toggle-trigger: colors red;
}

.colors p:toggle(colors purple) {
  color: rebeccapurple;
}

.colors p:toggle(colors green) {
  color: green;
}

.colors p:toggle(colors blue) {
  color: blue;
}

.colors p:toggle(colors red) {
  color: red;
}

/* State machines */
@machine request {
  idle {
    try: loading;
  }

  loading {
    resolve: success;
    reject: failure;
  }

  failure {
    try: loading;
  }

  success {}
}

.request {
  toggle-root: machine(request);
}

.request button[data-do="try"] {
  toggle-trigger: request do(try);
}

.request button[data-do="resolve"] {
  toggle-trigger: request do(resolve);
}

.request button[data-do="reject"] {
  toggle-trigger: request do(reject);
}

.request .status:toggle(request idle) {
  background-color: grey;
}

.request .status:toggle(request loading) {
  background-color: yellow;
}

.request .status:toggle(request failure) {
  background-color: red;
}

.request .status:toggle(request success) {
  background-color: green;
}

.request .status:after {
  content: attr(data-toggle);
}
